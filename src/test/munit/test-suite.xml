<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns="http://www.mulesoft.org/schema/mule/core"
    xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
    xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
    <munit:config name="test-suite.xml" />

    <configuration-properties doc:name="Configuration properties" doc:id="3ada2881-d4b2-4e61-af85-f0d435105cb1"
        file="common.properties" />
    <configuration-properties doc:name="Configuration properties" doc:id="4d1cfd27-37cf-4e7e-b110-8f153d066ea4"
        file="mule.test.properties" />
    <http:request-config name="HTTP_Request_Configuration" doc:name="HTTP Request configuration" doc:id="fc3d03c8-d892-46b5-9785-9a513c2a9ed3"
        basePath="${api.basePath}">
        <http:request-connection host="${api.domain}" port="${http.port}" />
    </http:request-config>
    <munit:test name="test-suite-get:accounts:system-api-configTest" description="MUnit Test" doc:id="79ee752f-af91-4ef1-bb22-c80194cc115f">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="system-api-main" />
            <munit:enable-flow-source value="get:\accounts:system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <ee:transform doc:name="Set dbAccounts" doc:id="e045f1ac-ae61-4442-adf0-c8658d52fc50">
                <ee:message>
                </ee:message>
                <ee:variables>
                    <ee:set-variable variableName="dbAccounts"><![CDATA[%dw 2.0
output application/java
---
[
   {
	"Id": "2e1c66e5-1db8-11e6-8d57-54ee7534a10b",
	"Name": "Eduard Walker",
	"BillingStreet": "Pleasure 4598",
	"BillingCity": "Shreveport",
	"BillingState": "Louisiana",
	"BillingPostalCode": "71105",
	"BillingCountry": "United States",
	"ShippingStreet": "Autumn Leaf 3",
	"ShippingCity": "Jackson",
	"ShippingState": "Mississippi",
	"ShippingPostalCode": "39204",
	"ShippingCountry": "United States",
	"LastModifiedDate": "2016-05-19T13:52:36"
},
   {
	"Id": "7d940c44-1db7-11e6-8d57-54ee7534a10b",
	"Name": "Tom Walkers",
	"BillingStreet": "Pleasure 4598",
	"BillingCity": "Shreveport",
	"BillingState": "Louisiana",
	"BillingPostalCode": "71105",
	"BillingCountry": "United States",
	"ShippingStreet": "Autumn Leaf 3",
	"ShippingCity": "Jackson",
	"ShippingState": "Mississippi",
	"ShippingPostalCode": "39204",
	"ShippingCountry": "United States",
	"LastModifiedDate": "2016-05-19T13:47:40"
}
]]]></ee:set-variable>
                </ee:variables>
            </ee:transform>
            <munit-tools:mock-when doc:name="Mock 'SELECT Accounts'" doc:id="8b7b62ac-d772-4cbd-9671-ae7f41707f0b"
                processor=".*:.*">
                <munit-tools:with-attributes>
                    <munit-tools:with-attribute attributeName="doc:name" whereValue="SELECT Accounts" />
                </munit-tools:with-attributes>
                <munit-tools:then-return>
                    <munit-tools:payload value="#[vars.dbAccounts]" />
                </munit-tools:then-return>
            </munit-tools:mock-when>
            <munit-tools:spy doc:name="Spy" doc:id="bc218e98-ec6b-49a7-abbe-e2ce5534991d" processor=".*:.*">
                <munit-tools:with-attributes>
                    <munit-tools:with-attribute attributeName="doc:name" whereValue="Build whereClause as string" />
                </munit-tools:with-attributes>
                <munit-tools:after-call>
                    <munit-tools:assert-that doc:name="Assert whereClause is correct" doc:id="42ea093d-7258-437b-84fa-89374300c0d1"
                        expression="#[vars.whereClause]" message="The whereClause does not match!"
                        is="#[MunitTools::equalTo(&quot;AND Name LIKE '%walker%' AND LastModifiedDate &lt; '2016-05-20 00:00:00' AND LastModifiedDate &gt; '2016-05-18 00:00:00' ORDER BY LastModifiedDate DESC LIMIT 5 OFFSET 0&quot;)]" />
                </munit-tools:after-call>
            </munit-tools:spy>
        </munit:behavior>
        <munit:execution>
            <http:request method="GET" doc:name="HTTP GET Request" doc:id="fae74a63-9fff-48cf-9b57-952af5e1d739" config-ref="HTTP_Request_Configuration"
                path="/accounts">
                <http:query-params><![CDATA[#[output applicaton/java
---
{
	"name" : "walker",
	"modifiedAfter" : "2016-05-18T00:00:00.000Z",
	"modifiedBefore" : "2016-05-20T00:00:00.000Z",
	"orderBy" : "lastmodifieddate",
	"order" : "desc",
	"maxResults" : "5",
	"offset" : "0"
}]]]></http:query-params>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that doc:name="Assert that http.status eq 200" doc:id="1449487c-a810-4919-a567-a09780f6414c"
                expression="#[attributes.statusCode]" message="The HTTP Status code is not correct!" is="#[MunitTools::equalTo(200)]" />

            <ee:transform doc:name="Extract IDs" doc:id="1a600489-3183-4979-8f5a-1ef1031150aa">
                <ee:message>
                    <ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload map $.id]]></ee:set-payload>
                </ee:message>
            </ee:transform>

            <munit-tools:assert-that doc:name="Assert that there are concrete accounts in particular order" doc:id="74ef4a52-32d9-46fc-8c27-7ff02bb84050"
                expression="#[payload]" message="There should be concrete accounts in particular order."
                is='#[MunitTools::equalTo(["2e1c66e5-1db8-11e6-8d57-54ee7534a10b", "7d940c44-1db7-11e6-8d57-54ee7534a10b"])]' />
        </munit:validation>
    </munit:test>
    <munit:test name="test-suite-get:accounts_id:system-api-configTest" description="MUnit Test" doc:id="2fdb2892-d840-4b70-bcd1-eaa48d60be12">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="system-api-main" />
            <munit:enable-flow-source value="get:\accounts\(id):system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <ee:transform doc:name="Set dbAccount" doc:id="9fc8a6e1-b24f-441d-9bcc-01e2056d286a">
                <ee:message>
                </ee:message>
                <ee:variables>
                    <ee:set-variable variableName="dbAccount"><![CDATA[%dw 2.0
output application/java
---
[{
	"Id" : "12345abc",
	"Name": "Eduard Walker",
	"Phone": "1-(318)596-8473",
	"Email": "ewalker0@liveinternet.ru",
	"billingAddress": {
		"street": "Pleasure 4598",
		"city": "Shreveport",
		"state": "Louisiana",
		"postalCode": "71105",
		"country": "United States"
	},
	"shippingAddress": {
		"street": "Autumn Leaf 3",
		"city": "Jackson",
		"state": "Mississippi",
		"postalCode": "39204",
		"country": "United States"
	}
}]]]></ee:set-variable>
                </ee:variables>
            </ee:transform>
            <munit-tools:mock-when doc:name="Mock 'Select Account'" doc:id="8b7b62ac-d772-4cbd-9671-ae7f41707f0b"
                processor=".*:.*">
                <munit-tools:with-attributes>
                    <munit-tools:with-attribute attributeName="doc:name" whereValue="Select Account" />
                </munit-tools:with-attributes>
                <munit-tools:then-return>
                    <munit-tools:payload value="#[vars.dbAccount]" />
                </munit-tools:then-return>
            </munit-tools:mock-when>
        </munit:behavior>
        <munit:execution>
            <http:request method="GET" doc:name="HTTP GET Request" doc:id="b694dd1f-097c-4c64-b582-5910a2dcc675" config-ref="HTTP_Request_Configuration"
                path="/accounts/{id}">
                <http:uri-params><![CDATA[#[output applicaton/java
---
{
	"id" : "12345abc"
}]]]></http:uri-params>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that doc:name="Assert that http.status eq 200" doc:id="1449487c-a810-4919-a567-a09780f6414c"
                expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" />
        </munit:validation>
    </munit:test>
    <munit:test name="test-suite-get:accounts_id:system-api-configTest-not-found" description="MUnit Test"
        doc:id="2fdb2892-d840-4b70-bcd1-eaa48d60be12" expectedErrorType="HTTP:NOT_FOUND">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="system-api-main" />
            <munit:enable-flow-source value="get:\accounts\(id):system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <munit-tools:mock-when doc:name="Mock 'Select Account'" doc:id="8b7b62ac-d772-4cbd-9671-ae7f41707f0b"
                processor=".*:.*">
                <munit-tools:with-attributes>
                    <munit-tools:with-attribute attributeName="doc:name" whereValue="Select Account" />
                </munit-tools:with-attributes>
                <munit-tools:then-return>
                    <munit-tools:payload value='#[[]]' mediaType="application/java" />
                </munit-tools:then-return>
            </munit-tools:mock-when>
        </munit:behavior>
        <munit:execution>
            <http:request method="GET" doc:name="HTTP GET Request" doc:id="b694dd1f-097c-4c64-b582-5910a2dcc675" config-ref="HTTP_Request_Configuration"
                path="/accounts/{id}">
                <http:uri-params><![CDATA[#[output applicaton/java
---
{
	"id" : "12345abc"
}]]]></http:uri-params>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that doc:name="Assert that http.status eq 404" doc:id="1449487c-a810-4919-a567-a09780f6414c"
                expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" />
        </munit:validation>
    </munit:test>
    <munit:test name="test-suite-post:accounts:system-api-configTest" description="MUnit Test" doc:id="81744de4-d123-4692-aeb4-675c55f49f6f">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="system-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <munit-tools:mock-when doc:name="Mock 'INSERT Account'" doc:id="7a11ebe2-e140-4791-9be4-406b95fb6ed0"
                processor=".*:.*">
                <munit-tools:with-attributes>
                    <munit-tools:with-attribute attributeName="doc:name" whereValue="INSERT Account" />
                </munit-tools:with-attributes>
                <munit-tools:then-return>
                    <munit-tools:payload value='#[{"affectedRows" : 1}]' mediaType="application/java" />
                </munit-tools:then-return>
            </munit-tools:mock-when>
        </munit:behavior>
        <munit:execution>
            <set-payload
                value='{
  "nativeId": "1a2b3c4d",
  "name": "Eduard Walker",
  "phone": "1-(318)596-8473",
  "email": "ewalker0@liveinternet.ru",
  "billingAddress": {
  	"street": "Pleasure 4598",
  	"city": "Shreveport",
  	"state": "Louisiana",
  	"postalCode": "71105",
  	"country": "United States"
  },
  "shippingAddress": {
  	"street": "Autumn Leaf 3",
  	"city": "Jackson",
  	"state": "Mississippi",
  	"postalCode": "39204",
  	"country": "United States"
  }
}'
                doc:name="Set Payload" doc:id="16ca4647-174f-409b-9c5f-8a93b30a362b" mimeType="application/json" />
            <http:request method="POST" doc:name="HTTP POST Request" doc:id="5aaab1fd-005f-4236-b20a-06ebb4635740" config-ref="HTTP_Request_Configuration"
                path="/accounts" />
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that doc:name="Assert that http.status eq 201" doc:id="1449487c-a810-4919-a567-a09780f6414c"
                expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" />
        </munit:validation>
    </munit:test>
    <munit:test name="test-suite-post:accounts:system-api-configTest-bad-request" description="MUnit Test"
        doc:id="72a3adc0-2a77-4bb0-a428-44cd46ffbcc4" expectedErrorType="HTTP:BAD_REQUEST">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="system-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <munit-tools:mock-when doc:name="Mock 'INSERT Account'" doc:id="8b7b62ac-d772-4cbd-9671-ae7f41707f0b"
                processor=".*:.*">
                <munit-tools:with-attributes>
                    <munit-tools:with-attribute attributeName="doc:name" whereValue="INSERT Account" />
                </munit-tools:with-attributes>
                <munit-tools:then-return>
                    <munit-tools:payload value='#[{"affectedRows" : 0}]' mediaType="application/java" />
                </munit-tools:then-return>
            </munit-tools:mock-when>
        </munit:behavior>
        <munit:execution>
            <set-payload
                value='{
  "nativeId": "1a2b3c4d",
  "name": "Eduard Walker",
  "phone": "1-(318)596-8473",
  "email": "ewalker0@liveinternet.ru",
  "billingAddress": {
    "street": "Pleasure 4598",
    "city": "Shreveport",
    "state": "Louisiana",
    "postalCode": "71105",
    "country": "United States"
  },
  "shippingAddress": {
    "street": "Autumn Leaf 3",
    "city": "Jackson",
    "state": "Mississippi",
    "postalCode": "39204",
    "country": "United States"
  }
}'
                doc:name="Set Payload" doc:id="16ca4647-174f-409b-9c5f-8a93b30a362b" mimeType="application/json" />
            <http:request method="POST" doc:name="HTTP POST Request" doc:id="5aaab1fd-005f-4236-b20a-06ebb4635740" config-ref="HTTP_Request_Configuration"
                path="/accounts" />
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that doc:name="Assert that http.status eq 400" doc:id="1449487c-a810-4919-a567-a09780f6414c"
                expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" />
        </munit:validation>
    </munit:test>
    <munit:test name="test-suite-put:accounts_id:system-api-configTest" description="MUnit Test" doc:id="c7779532-a921-4084-8a8f-cfe0583addc5">
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="system-api-main" />
			<munit:enable-flow-source value="put:\accounts\(id):application\json:system-api-config" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock 'Select Account'" doc:id="8b7b62ac-d772-4cbd-9671-ae7f41707f0b" processor=".*:.*" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="doc:name" whereValue="Select Account" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[payload]" />
					<munit-tools:variables >
						<munit-tools:variable key="recordFromDb" value='#[["5261bb4e-f9e3-4f48-93ae-bd68e424daf3"]]' />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock 'UPDATE Account'" doc:id="8b7b62ac-d772-4cbd-9671-ae7f41707f0b" processor=".*:.*" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="doc:name" whereValue="UPDATE Account" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[{"affectedRows" : 1}]' mediaType="application/java"/>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<set-payload value='{
  "name": "Jason Bourne",
  "phone": "1-(318)596-8473",
  "email": "test@example.com",
  "billingAddress": {
  	"street": "Pleasure 4598",
  	"city": "Shreveport",
  	"state": "Louisiana",
  	"postalCode": "71105",
  	"country": "United States"
  },
  "shippingAddress": {
  	"street": "Autumn Leaf 3",
  	"city": "Jackson",
  	"state": "Mississippi",
  	"postalCode": "39204",
  	"country": "United States"
  }
}' doc:name="Set Payload" doc:id="16ca4647-174f-409b-9c5f-8a93b30a362b" mimeType="application/json" />
			<http:request method="PUT" doc:name="HTTP PUT Request" doc:id="b694dd1f-097c-4c64-b582-5910a2dcc676" config-ref="HTTP_Request_Configuration" path="/accounts/{id}" >
				<http:uri-params ><![CDATA[#[output applicaton/java
---
{
	"id" : "5261bb4e-f9e3-4f48-93ae-bd68e424daf3"
}]]]></http:uri-params>
			</http:request>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that http.status eq 200" doc:id="1449487c-a810-4919-a567-a09780f6414c" expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" />
		</munit:validation>
	</munit:test>
	<munit:test name="test-suite-put:accounts_id:system-api-configTest-not-found" description="MUnit Test" doc:id="2fdb2892-d840-4b70-bcd1-eaa48d60be13" expectedErrorType="HTTP:NOT_FOUND">
        <munit:enable-flow-sources >
			<munit:enable-flow-source value="system-api-main" />
			<munit:enable-flow-source value="put:\accounts\(id):application\json:system-api-config" />
		</munit:enable-flow-sources>
		<munit:behavior>
                <munit-tools:mock-when doc:name="Mock 'Select Account'" doc:id="8b7b62ac-d772-4cbd-9671-ae7f41707f0b" processor=".*:.*">
                    <munit-tools:with-attributes>
                        <munit-tools:with-attribute attributeName="doc:name" whereValue="Select Account" />
                    </munit-tools:with-attributes>
                    <munit-tools:then-return>
                        <munit-tools:payload value="#[[]]" />
                    </munit-tools:then-return>
                </munit-tools:mock-when>
            </munit:behavior>
            <munit:execution>
                <set-payload value='{
  "name": "Jason Bourne",
  "phone": "1-(318)596-8473",
  "email": "test@example.com",
  "billingAddress": {
  	"street": "Pleasure 4598",
  	"city": "Shreveport",
  	"state": "Louisiana",
  	"postalCode": "71105",
  	"country": "United States"
  },
  "shippingAddress": {
  	"street": "Autumn Leaf 3",
  	"city": "Jackson",
  	"state": "Mississippi",
  	"postalCode": "39204",
  	"country": "United States"
  }
}' doc:name="Set Payload" doc:id="16ca4647-174f-409b-9c5f-8a93b30a362b" mimeType="application/json" />
			<http:request method="PUT" doc:name="HTTP PUT Request" doc:id="b694dd1f-097c-4c64-b582-5910a2dcc675" config-ref="HTTP_Request_Configuration" path="/accounts/{id}">
                    <http:uri-params><![CDATA[#[output applicaton/java
---
{
	"id" : "12345abc"
}]]]></http:uri-params>
                </http:request>
            </munit:execution>
            <munit:validation>
                <munit-tools:assert-that doc:name="Assert that http.status eq 404" doc:id="1449487c-a810-4919-a567-a09780f6414c" expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" />
            </munit:validation>
        </munit:test>
                        <munit:test name="test-suite-delete:accounts_id:system-api-configTest" description="MUnit Test" doc:id="2fdb2892-d840-4b70-bcd1-eaa48d60be15">
        <munit:enable-flow-sources >
            <munit:enable-flow-source value="system-api-main" />
            <munit:enable-flow-source value="delete:\accounts\(id):system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
                <munit-tools:mock-when doc:name="Mock 'SELECT Account with specific ID'" doc:id="8b7b62ac-d772-4cbd-9671-ae7f41707f0b" processor=".*:.*">
                    <munit-tools:with-attributes>
                        <munit-tools:with-attribute attributeName="doc:name" whereValue="SELECT Account with specific ID" />
                    </munit-tools:with-attributes>
                    <munit-tools:then-return>
                    <munit-tools:payload value='#[["5261bb4e-f9e3-4f48-93ae-bd68e424daf3"]]' />

                    </munit-tools:then-return>
                </munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock 'DELETE Account'" doc:id="8b7b62ac-d772-4cbd-9671-ae7f41707f0b" processor=".*:.*" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="doc:name" whereValue="DELETE Account" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[1]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
            
</munit:behavior>
            <munit:execution>
            <http:request method="DELETE" doc:name="HTTP DELETE Request" doc:id="b694dd1f-097c-4c64-b582-5910a2dcc675" config-ref="HTTP_Request_Configuration" path="/accounts/{id}">
                    <http:uri-params><![CDATA[#[output applicaton/java
---
{
	"id" : "5261bb4e-f9e3-4f48-93ae-bd68e424daf3"
}]]]></http:uri-params>
                </http:request>
            </munit:execution>
            <munit:validation>
                <munit-tools:assert-that doc:name="Assert that http.status eq 200" doc:id="1449487c-a810-4919-a567-a09780f6414c" expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" />
            </munit:validation>
        </munit:test>
                <munit:test name="test-suite-delete:accounts_id:system-api-configTest-not-found" description="MUnit Test" doc:id="2fdb2892-d840-4b70-bcd1-eaa48d60be13" expectedErrorType="HTTP:NOT_FOUND">
        <munit:enable-flow-sources >
            <munit:enable-flow-source value="system-api-main" />
            <munit:enable-flow-source value="delete:\accounts\(id):system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
                <munit-tools:mock-when doc:name="Mock 'SELECT Account with specific ID'" doc:id="8b7b62ac-d772-4cbd-9671-ae7f41707f0b" processor=".*:.*">
                    <munit-tools:with-attributes>
                        <munit-tools:with-attribute attributeName="doc:name" whereValue="SELECT Account with specific ID" />
                    </munit-tools:with-attributes>
                    <munit-tools:then-return>
					<munit-tools:payload value="#[[]]" />

                    </munit-tools:then-return>
                </munit-tools:mock-when>
            </munit:behavior>
            <munit:execution>
            <http:request method="DELETE" doc:name="HTTP DELETE Request" doc:id="b694dd1f-097c-4c64-b582-5910a2dcc675" config-ref="HTTP_Request_Configuration" path="/accounts/{id}">
                    <http:uri-params><![CDATA[#[output applicaton/java
---
{
	"id" : "12345abc"
}]]]></http:uri-params>
                </http:request>
            </munit:execution>
            <munit:validation>
                <munit-tools:assert-that doc:name="Assert that http.status eq 404" doc:id="1449487c-a810-4919-a567-a09780f6414c" expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" />
            </munit:validation>
        </munit:test>
</mule>
